{"version":3,"file":"static/js/595.6f8a0cf6.chunk.js","mappings":"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","sources":["components/Error/Error.jsx","components/ServiceAPI/API.js","webpack://goit-react-hw-05-movies/./src/pages/MoviesDetails/MoviesDetails.module.css?e2c8","pages/MoviesDetails/MoviesDetails.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nconst ErrorMasage = ({ error }) => {\n  return (\n    <>\n      <h2>{error}</h2>\n    </>\n  );\n};\n\nexport default ErrorMasage;\n\nErrorMasage.propTypes = {\n  error: PropTypes.string,\n};\n","const KEY = '9b552d5a8c71a797069fcc867d8581be';\nconst BASE_URL = 'https://api.themoviedb.org';\n\nexport const trendingMovies = async () => {\n  const response = await fetch(\n    `${BASE_URL}/3/trending/movie/day?api_key=${KEY}`\n  );\n  if (!response.ok) {\n    throw new Error('Уууупсс, что-то пошло не так');\n  }\n\n  return response.json();\n};\n\nexport const filmDetails = async movieId => {\n  const response = await fetch(`${BASE_URL}/3/movie/${movieId}?api_key=${KEY}`);\n  if (!response.ok) {\n    throw new Error('Уууупсс, что-то пошло не так');\n  }\n  return response.json();\n};\n\nexport const movieCredits = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/3/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  if (!response.ok) {\n    throw new Error('Уууупсс, что-то пошло не так');\n  }\n  return response.json();\n};\n\nexport const movieReviews = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/3/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  if (!response.ok) {\n    throw new Error('Уууупсс, что-то пошло не так');\n  }\n  return response.json();\n};\n\nexport const movieSearch = async query => {\n  const response = await fetch(\n    `${BASE_URL}/3/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1`\n  );\n  if (!response.ok) {\n    throw new Error('Уууупсс, что-то пошло не так');\n  }\n  return response.json();\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"img\":\"MoviesDetails_img__kTMiQ\",\"film__container\":\"MoviesDetails_film__container__AB68W\",\"info\":\"MoviesDetails_info__7t3XW\",\"genres\":\"MoviesDetails_genres__BRdjB\",\"second__info\":\"MoviesDetails_second__info__NgkkL\",\"link__container\":\"MoviesDetails_link__container__yuDju\",\"link__info\":\"MoviesDetails_link__info__rj9Le\",\"ganres__info\":\"MoviesDetails_ganres__info__gImef\"};","import { filmDetails } from 'components/ServiceAPI/API';\nimport { useState, useEffect, useRef, Suspense } from 'react';\nimport { NavLink, useParams, useLocation, Outlet } from 'react-router-dom';\nimport ErrorMasage from 'components/Error/Error';\nimport { Loader } from 'components/Loader/Loader';\nimport css from './MoviesDetails.module.css';\n\nconst MovieDetails = () => {\n  const [details, setDetails] = useState({});\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    async function getDetails() {\n      try {\n        setLoading(true);\n        const selectedMovie = await filmDetails(movieId);\n        setDetails(selectedMovie);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getDetails();\n  }, [movieId]);\n\n  if (!details) {\n    return;\n  }\n\n  const { genres, title, overview, popularity, poster_path } = details;\n\n  return (\n    <>\n      <NavLink to={backLinkHref.current}>\n        <button>Go Back</button>\n      </NavLink>\n\n      {loading && <Loader />}\n      <div className={css.film__container}>\n        <img\n          className={css.img}\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : `https://static8.depositphotos.com/1431107/919/i/600/depositphotos_9199988-stock-photo-oops-icon.jpg`\n          }\n          alt={title}\n        />\n        <div className={css.info}>\n          <h2>{title}</h2>\n          <p>User Score: {popularity}</p>\n          <h3> Overview</h3>\n          <p>{overview}</p>\n        </div>\n        <div className={css.ganres__info}>\n          <h3 className={css.second__info}>Genres</h3>\n          {genres && (\n            <ul className={css.genres}>\n              {genres.map(genre => (\n                <li key={genre.id}>{genre.name}</li>\n              ))}\n            </ul>\n          )}\n        </div>\n      </div>\n      <div>\n        <h3 className={css.second__info}>Additional information</h3>\n        <ul className={css.link__container}>\n          <li className={css.link__info}>\n            <NavLink to=\"cast\">Cast</NavLink>\n          </li>\n          <li className={css.link__info}>\n            <NavLink to=\"reviews\">Reviews</NavLink>\n          </li>\n        </ul>\n        <Suspense>\n          <Outlet />\n        </Suspense>\n      </div>\n      {error && <ErrorMasage error={error} />}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["error","KEY","BASE_URL","trendingMovies","fetch","response","ok","Error","json","filmDetails","movieId","movieCredits","movieReviews","movieSearch","query","useState","details","setDetails","setError","loading","setLoading","useParams","location","useLocation","backLinkHref","useRef","state","from","useEffect","selectedMovie","message","getDetails","genres","title","overview","popularity","poster_path","NavLink","to","current","Loader","className","css","src","alt","map","genre","name","id","Suspense"],"sourceRoot":""}