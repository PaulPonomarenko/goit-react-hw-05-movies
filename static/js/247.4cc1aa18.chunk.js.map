{"version":3,"file":"static/js/247.4cc1aa18.chunk.js","mappings":"kOAqDA,UAhDa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEIH,GAAW,GAFf,UAG4BI,EAAAA,EAAAA,IAAaH,GAHzC,OAGUI,EAHV,OAIIP,EAAQO,EAAUR,MAJtB,gDAMIS,QAAQC,IAAI,KAAMC,SANtB,yBAQIR,GAAW,GARf,6EADc,uBAAC,WAAD,wBAYdS,EACD,GAAE,CAACR,KAGF,+BACE,2BACGF,IAAW,SAAC,IAAD,KACZ,wBACGF,EAAKa,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,UAAWC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAChC,OACE,2BACE,gBACEC,MAAO,IACPC,IACEF,EAAY,yCAC0BA,GAD1B,gDAIdG,IAAKJ,KAEP,wBAAKA,KACL,uBAAIF,MAXGC,EAcZ,UAKV,C,sLCnDKM,EAAM,mCACNC,EAAW,6BAEJC,EAAc,mCAAG,oGACLC,MAAM,GAAD,OACvBF,EADuB,yCACkBD,IAFlB,WACtBI,EADsB,QAIdC,GAJc,sBAKpB,IAAIC,MAAM,8IALU,gCAQrBF,EAASG,QARY,2CAAH,qDAWdC,EAAW,mCAAG,WAAMzB,GAAN,uFACFoB,MAAM,GAAD,OAAIF,EAAJ,oBAAwBlB,EAAxB,oBAA2CiB,IAD9C,WACnBI,EADmB,QAEXC,GAFW,sBAGjB,IAAIC,MAAM,8IAHO,gCAKlBF,EAASG,QALS,2CAAH,sDAQXrB,EAAY,mCAAG,WAAMH,GAAN,uFACHoB,MAAM,GAAD,OACvBF,EADuB,oBACHlB,EADG,4BACwBiB,EADxB,oBADF,WACpBI,EADoB,QAIZC,GAJY,sBAKlB,IAAIC,MAAM,8IALQ,gCAOnBF,EAASG,QAPU,2CAAH,sDAUZE,EAAY,mCAAG,WAAM1B,GAAN,uFACHoB,MAAM,GAAD,OACvBF,EADuB,oBACHlB,EADG,4BACwBiB,EADxB,2BADF,WACpBI,EADoB,QAIZC,GAJY,sBAKlB,IAAIC,MAAM,8IALQ,gCAOnBF,EAASG,QAPU,2CAAH,sDAUZG,EAAW,mCAAG,WAAMC,GAAN,uFACFR,MAAM,GAAD,OACvBF,EADuB,mCACYD,EADZ,kBACyBW,EADzB,2BADH,WACnBP,EADmB,QAIXC,GAJW,sBAKjB,IAAIC,MAAM,8IALO,gCAOlBF,EAASG,QAPS,2CAAH,qD,sBC1CxB,SAASK,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C","sources":["components/Cast/Cast.jsx","components/ServiceAPI/API.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { movieCredits } from 'components/ServiceAPI/API';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getCast() {\n      try {\n        setLoading(true);\n        const movieCast = await movieCredits(movieId);\n        setCast(movieCast.cast);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getCast();\n  }, [movieId]);\n\n  return (\n    <>\n      <div>\n        {loading && <Loader />}\n        <ul>\n          {cast.map(({ character, id, name, profile_path }) => {\n            return (\n              <li key={id}>\n                <img\n                  width={150}\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                      : `https://profiles.utdallas.edu/img/default.png`\n                  }\n                  alt={name}\n                />\n                <h3>{name}</h3>\n                <p>{character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default Cast;\n","const KEY = '9b552d5a8c71a797069fcc867d8581be';\nconst BASE_URL = 'https://api.themoviedb.org';\n\nexport const trendingMovies = async () => {\n  const response = await fetch(\n    `${BASE_URL}/3/trending/movie/day?api_key=${KEY}`\n  );\n  if (!response.ok) {\n    throw new Error('Уууупсс, что-то пошло не так');\n  }\n\n  return response.json();\n};\n\nexport const filmDetails = async movieId => {\n  const response = await fetch(`${BASE_URL}/3/movie/${movieId}?api_key=${KEY}`);\n  if (!response.ok) {\n    throw new Error('Уууупсс, что-то пошло не так');\n  }\n  return response.json();\n};\n\nexport const movieCredits = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/3/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  if (!response.ok) {\n    throw new Error('Уууупсс, что-то пошло не так');\n  }\n  return response.json();\n};\n\nexport const movieReviews = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/3/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  if (!response.ok) {\n    throw new Error('Уууупсс, что-то пошло не так');\n  }\n  return response.json();\n};\n\nexport const movieSearch = async query => {\n  const response = await fetch(\n    `${BASE_URL}/3/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1`\n  );\n  if (!response.ok) {\n    throw new Error('Уууупсс, что-то пошло не так');\n  }\n  return response.json();\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useState","cast","setCast","loading","setLoading","movieId","useParams","useEffect","movieCredits","movieCast","console","log","message","getCast","map","character","id","name","profile_path","width","src","alt","KEY","BASE_URL","trendingMovies","fetch","response","ok","Error","json","filmDetails","movieReviews","movieSearch","query","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}