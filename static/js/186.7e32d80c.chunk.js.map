{"version":3,"file":"static/js/186.7e32d80c.chunk.js","mappings":"kOA8CA,UAzCgB,WACd,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEIH,GAAW,GAFf,UAG8BI,EAAAA,EAAAA,IAAaH,GAH3C,OAGUI,EAHV,OAIIP,EAAUO,EAAYC,SAJ1B,gDAMIC,QAAQC,IAAI,KAAMC,SANtB,yBAQIT,GAAW,GARf,6EADc,uBAAC,WAAD,wBAYdU,EACD,GAAE,CAACT,KAGF,gCACGF,IAAW,SAAC,IAAD,KACZ,yBACGF,EAAOc,OAAS,GACf,wBACGd,EAAOe,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACV,2BACE,wBAAKF,KACL,yBAAG,IAAEC,EAAQ,SAFNC,EADC,OAQd,uBAAG,iDAKZ,C,sLC5CKC,EAAM,mCACNC,EAAW,6BAEJC,EAAc,mCAAG,oGACLC,MAAM,GAAD,OACvBF,EADuB,yCACkBD,IAFlB,WACtBI,EADsB,QAIdC,GAJc,sBAKpB,IAAIC,MAAM,8IALU,gCAQrBF,EAASG,QARY,2CAAH,qDAWdC,EAAW,mCAAG,WAAMvB,GAAN,uFACFkB,MAAM,GAAD,OAAIF,EAAJ,oBAAwBhB,EAAxB,oBAA2Ce,IAD9C,WACnBI,EADmB,QAEXC,GAFW,sBAGjB,IAAIC,MAAM,8IAHO,gCAKlBF,EAASG,QALS,2CAAH,sDAQXE,EAAY,mCAAG,WAAMxB,GAAN,uFACHkB,MAAM,GAAD,OACvBF,EADuB,oBACHhB,EADG,4BACwBe,EADxB,oBADF,WACpBI,EADoB,QAIZC,GAJY,sBAKlB,IAAIC,MAAM,8IALQ,gCAOnBF,EAASG,QAPU,2CAAH,sDAUZnB,EAAY,mCAAG,WAAMH,GAAN,uFACHkB,MAAM,GAAD,OACvBF,EADuB,oBACHhB,EADG,4BACwBe,EADxB,2BADF,WACpBI,EADoB,QAIZC,GAJY,sBAKlB,IAAIC,MAAM,8IALQ,gCAOnBF,EAASG,QAPU,2CAAH,sDAUZG,EAAW,mCAAG,WAAMC,GAAN,uFACFR,MAAM,GAAD,OACvBF,EADuB,mCACYD,EADZ,kBACyBW,EADzB,2BADH,WACnBP,EADmB,QAIXC,GAJW,sBAKjB,IAAIC,MAAM,8IALO,gCAOlBF,EAASG,QAPS,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","components/ServiceAPI/API.js"],"sourcesContent":["import { Loader } from 'components/Loader/Loader';\nimport { movieReviews } from 'components/ServiceAPI/API';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [review, setRewiew] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getRewiews() {\n      try {\n        setLoading(true);\n        const movieReview = await movieReviews(movieId);\n        setRewiew(movieReview.results);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getRewiews();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      <div>\n        {review.length > 0 ? (\n          <ul>\n            {review.map(({ author, content, id }) => (\n              <li key={id}>\n                <h3>{author}</h3>\n                <p> {content} </p>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>We don't have any reviews for this movie</p>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Reviews;\n","const KEY = '9b552d5a8c71a797069fcc867d8581be';\nconst BASE_URL = 'https://api.themoviedb.org';\n\nexport const trendingMovies = async () => {\n  const response = await fetch(\n    `${BASE_URL}/3/trending/movie/day?api_key=${KEY}`\n  );\n  if (!response.ok) {\n    throw new Error('Уууупсс, что-то пошло не так');\n  }\n\n  return response.json();\n};\n\nexport const filmDetails = async movieId => {\n  const response = await fetch(`${BASE_URL}/3/movie/${movieId}?api_key=${KEY}`);\n  if (!response.ok) {\n    throw new Error('Уууупсс, что-то пошло не так');\n  }\n  return response.json();\n};\n\nexport const movieCredits = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/3/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  if (!response.ok) {\n    throw new Error('Уууупсс, что-то пошло не так');\n  }\n  return response.json();\n};\n\nexport const movieReviews = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/3/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  if (!response.ok) {\n    throw new Error('Уууупсс, что-то пошло не так');\n  }\n  return response.json();\n};\n\nexport const movieSearch = async query => {\n  const response = await fetch(\n    `${BASE_URL}/3/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1`\n  );\n  if (!response.ok) {\n    throw new Error('Уууупсс, что-то пошло не так');\n  }\n  return response.json();\n};\n"],"names":["useState","review","setRewiew","loading","setLoading","movieId","useParams","useEffect","movieReviews","movieReview","results","console","log","message","getRewiews","length","map","author","content","id","KEY","BASE_URL","trendingMovies","fetch","response","ok","Error","json","filmDetails","movieCredits","movieSearch","query"],"sourceRoot":""}